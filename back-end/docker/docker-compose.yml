version: '2'
services:
  app:
    image: 'docker-spring-boot-postgres:latest'
    build:
      context: .
    container_name: app
    depends_on:
      - db
      - kafka
      - elasticsearch
      - logstash
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/paperworkshop
      - SPRING_DATASOURCE_USERNAME=paperworkshop
      - SPRING_DATASOURCE_PASSWORD=paperworkshop
      - ENABLE_KAFKA=true
      - ENABLE_ELASTIC=false
      - ELASTIC_HOST_AND_PORT=elasticsearch:9200
      - KAFKA_HOST_AND_PORT=kafka:9092
    ports:
      - 80:8080
    volumes:
      - ./log:/log
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    expose:
      - 2181
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - 9092:9092
      - 9093:9093
    expose:
      - 9092
      - 9093
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    depends_on:
      - zookeeper
    volumes:
      - ./:/etc/kafka
  db:
    image: 'postgres'
    container_name: db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=paperworkshop
      - POSTGRES_PASSWORD=paperworkshop
    expose:
      - 5432
    ports:
      - 15432:5432
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.0
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.13.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.13.0
    command: -f /etc/logstash/conf.d/
    volumes:
      - ./logstash/logstash.conf:/etc/logstash/conf.d/logstash.conf
      - ./log:/log
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch